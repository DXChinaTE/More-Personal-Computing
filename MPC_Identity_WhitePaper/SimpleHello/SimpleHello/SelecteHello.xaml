<Page
    x:Class="SimpleHello.SelecteHello"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SimpleHello"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <TextBlock x:Uid="textBank" Grid.Row="0" Foreground="{StaticResource TextForegroundColor}" Text="DX Bank" 
                           FontSize="56" HorizontalAlignment="Center" Margin="0,80,0,30"/>
        <Grid x:Name="contentGrid" Grid.Row="1" Margin="20,0" HorizontalAlignment="Center" Width="900">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <TextBlock x:Name="textHelloDes" Foreground="Black" TextWrapping="Wrap" FontSize="22">
            
                </TextBlock>
            </Grid>
            <Image Grid.Column="1" Source="Assets/windowsHello.png" Width="160" Height="160" Margin="30,-30,0,0"  VerticalAlignment="Top"/>
        </Grid>
        <Grid x:Name="optionGrid" Grid.Row="2" Margin="20,40" HorizontalAlignment="Center" Width="900">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,0,0">
                <Button x:Uid="btnLater" Content="Maybe later" Style="{StaticResource ButtonStyle}" Height="45" Click="BtnLater_Click"/>
                <Button x:Uid="btnStartHello" Content="Start using Windows Hello" Style="{StaticResource ButtonStyle}" Height="45" Click="BtnStart_Click"/>
            </StackPanel>
        </Grid>
        <Grid x:Name="hyperlinkGrid" Grid.Row="3" Margin="20,10" HorizontalAlignment="Center" Width="900">
            <StackPanel x:Name="hyperlinkPannel" HorizontalAlignment="Left">
                <HyperlinkButton x:Uid="hyperlinkButton1" Content="Is it really more secure?" Tag="http://www.microsoft.com/About/Legal/EN/US/IntellectualProperty/Trademarks/EN-US.aspx"
                        Click="Footer_Click" FontSize="14" Style="{StaticResource HelloHyperlinkStyle}" />
                <HyperlinkButton x:Uid="hyperlinkButton2" Content="I only see PIN,what do i do?" Tag="http://privacy.microsoft.com" Click="Footer_Click" FontSize="14" Style="{StaticResource HelloHyperlinkStyle}"/>
            </StackPanel>
        </Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowSizeStates">
                <!-- First set of VisualStates are simple responsive states based on window size. AdaptiveTrigger is a built-in trigger that XAML knows to automatically trigger based on window size -->
                <VisualState>
                    <VisualState.StateTriggers>
                        <!-- Trigger below indicates that this VisualState is to be applied when the current window width is >= 720 effective pixels -->
                        <AdaptiveTrigger MinWindowWidth="1000" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- Simplified Setter statements are used to move elements around to optimize for more available space -->
                        <Setter Target="optionGrid.Width" Value="900" />
                        <Setter Target="contentGrid.Width" Value="900" />
                        <Setter Target="hyperlinkGrid.Width" Value="900" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <!-- Trigger below indicates that this VisualState is to be applied when the current window width is >= 720 effective pixels -->
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- Simplified Setter statements are used to move elements around to optimize for more available space -->
                        <Setter Target="optionGrid.Width" Value="680" />
                        <Setter Target="contentGrid.Width" Value="680" />
                        <Setter Target="hyperlinkGrid.Width" Value="680" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <!-- Trigger below indicates that this VisualState is to be applied when current window width is >=0 and <720 effective pixels -->
                        <AdaptiveTrigger MinWindowWidth="480" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- Simplified Setter statements are used to move elements around to optimize for lesser available space -->
                        <Setter Target="optionGrid.Width" Value="420" />
                        <Setter Target="contentGrid.Width" Value="420" />
                        <Setter Target="hyperlinkGrid.Width" Value="420" />
                    </VisualState.Setters>
                </VisualState>
               
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
