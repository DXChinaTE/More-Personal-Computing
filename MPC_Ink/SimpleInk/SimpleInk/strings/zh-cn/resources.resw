<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppBarAdd.Label" xml:space="preserve">
    <value>添加</value>
  </data>
  <data name="AppBarBrushType.Label" xml:space="preserve">
    <value>画笔类型</value>
  </data>
  <data name="AppBarColor.Label" xml:space="preserve">
    <value>颜色</value>
  </data>
  <data name="AppBarThickness.Label" xml:space="preserve">
    <value>画笔粗细</value>
  </data>
  <data name="AppBarTouch.Label" xml:space="preserve">
    <value>触控</value>
  </data>
  <data name="btnClear1.Content" xml:space="preserve">
    <value>清除</value>
  </data>
  <data name="btnConnect.Content" xml:space="preserve">
    <value>连接</value>
  </data>
  <data name="btnSave1.Content" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="Description1_p1" xml:space="preserve">
    <value>这个场景，演示了如何使用绘图板画图</value>
  </data>
  <data name="Description1_p2" xml:space="preserve">
    <value>-要绘图，可以使用触控笔，或用按住鼠标左键拖动</value>
  </data>
  <data name="Description2_p1" xml:space="preserve">
    <value>这个场景演示了如何使用墨水识别</value>
  </data>
  <data name="Description3_p1" xml:space="preserve">
    <value>这个场景演示了涂鸦选取</value>
  </data>
  <data name="Description3_p2" xml:space="preserve">
    <value>-选择笔画，使用鼠标右键按下，在涂鸦画上画一个区域，然后选择下方按钮进行编辑操作。</value>
  </data>
  <data name="Description4_p1" xml:space="preserve">
    <value>这个场景演示了多设备间绘图板的同步</value>
  </data>
  <data name="Description4_p2" xml:space="preserve">
    <value>-填入远程设备IP，点击连接，在绘图板上绘图</value>
  </data>
  <data name="FeatureName" xml:space="preserve">
    <value>绘图板示例</value>
  </data>
  <data name="IP" xml:space="preserve">
    <value>IP 地址</value>
  </data>
  <data name="linkbtnPrivacy.Content" xml:space="preserve">
    <value>隐私</value>
  </data>
  <data name="linkbtnTrademarks.Content" xml:space="preserve">
    <value>商标</value>
  </data>
  <data name="RecognizeBtn.Content" xml:space="preserve">
    <value>转换</value>
  </data>
  <data name="Scenario1" xml:space="preserve">
    <value>标准画板</value>
  </data>
  <data name="Scenario2" xml:space="preserve">
    <value>手写识别</value>
  </data>
  <data name="Scenario3" xml:space="preserve">
    <value>墨水编辑</value>
  </data>
  <data name="Scenario4" xml:space="preserve">
    <value>设备间同步</value>
  </data>
  <data name="textBallpoint.Text" xml:space="preserve">
    <value>圆珠笔</value>
  </data>
  <data name="textCalligraphy.Text" xml:space="preserve">
    <value>毛笔</value>
  </data>
  <data name="textCopyright.Text" xml:space="preserve">
    <value>微软公司保留所有权</value>
  </data>
  <data name="textDescription.Text" xml:space="preserve">
    <value>场景描述：</value>
  </data>
  <data name="textEnableErasing.Text" xml:space="preserve">
    <value>开启擦除模式</value>
  </data>
  <data name="textEnableInking.Text" xml:space="preserve">
    <value>开启触控</value>
  </data>
  <data name="textHighlighter.Text" xml:space="preserve">
    <value>荧光笔</value>
  </data>
  <data name="textLarge.Text" xml:space="preserve">
    <value>粗</value>
  </data>
  <data name="textLargest.Text" xml:space="preserve">
    <value>超粗</value>
  </data>
  <data name="textMedium.Text" xml:space="preserve">
    <value>适中</value>
  </data>
  <data name="textSmall.Text" xml:space="preserve">
    <value>细</value>
  </data>
  <data name="textSmallest.Text" xml:space="preserve">
    <value>超细</value>
  </data>
  <data name="textUnEnableErasing.Text" xml:space="preserve">
    <value>关闭擦除模式</value>
  </data>
  <data name="textUnEnableInking.Text" xml:space="preserve">
    <value>关闭触控</value>
  </data>
  <data name="AppBarCopy.Label" xml:space="preserve">
    <value>拷贝</value>
  </data>
  <data name="AppBarCut.Label" xml:space="preserve">
    <value>剪切</value>
  </data>
  <data name="AppBarPaste.Label" xml:space="preserve">
    <value>粘贴</value>
  </data>
  <data name="textHeader.Text" xml:space="preserve">
    <value>通用窗口平台示例</value>
  </data>
  <data name="btnClose.Content" xml:space="preserve">
    <value>关闭应用</value>
  </data>
  <data name="txtLanguageTip.Text" xml:space="preserve">
    <value>您必须关闭应用才能切换语言</value>
  </data>
  <data name="textSetting.Text" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="radioBtnClient.Content" xml:space="preserve">
    <value>客户端</value>
  </data>
  <data name="radioBtnServer.Content" xml:space="preserve">
    <value>服务端</value>
  </data>
  <data name="AppBarSelect.Label" xml:space="preserve">
    <value>选择</value>
  </data>
  <data name="selectStrokeText" xml:space="preserve">
    <value>墨迹</value>
  </data>
  <data name="Description3_pp2" xml:space="preserve">
    <value>-选择笔画，然后选择下方按钮进行编辑操作。</value>
  </data>
  <data name="textLanguageTitle.Text" xml:space="preserve">
    <value>选择语言:</value>
  </data>
</root>